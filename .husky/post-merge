#!/usr/bin/env bash

# Get current branch name
#currentBranchName=$( git branch --show-current )

# Get merged branch name
#mergedBranchName=$( git reflog | grep -m 1 'merge' | cut -d ' ' -f 4 | sed 's/://' )

echo
echo ==============================
echo = BEGIN: git post-merge hook =
echo ==============================
echo

# Check if certain files were modified by the merge process
lockFileChanged=$( git diff --name-only 'HEAD@{1}' HEAD | ( grep 'pnpm-lock.yaml' || true ) )
validatorChanged=$( git diff --name-only 'HEAD@{1}' HEAD | ( grep 'packages/validator/src/' || true ) )
backendChanged=$( git diff --name-only 'HEAD@{1}' HEAD | ( grep 'packages/backend/src/' || true ) )

# Re-install dependencies when there are modifications to pnpm lockfile
if [[ $lockFileChanged != '' ]]; then
    echo Installing project dependencies...
    pnpm i
    echo
fi

# Build validator package
if [[ $validatorChanged != '' ]]; then
    echo Building validator package...
    pnpm --filter="@trpc-subscription/validator" exec rm -rf dist
    pnpm --filter="@trpc-subscription/validator" build
    echo
fi

# Build backend package
if [[ $backendChanged != '' ]]; then
    echo Building backend package...
    pnpm --filter="@trpc-subscription/backend" exec rm -rf dist
    pnpm --filter="@trpc-subscription/backend" build
    echo
fi

echo
echo ============================
echo = END: git post-merge hook =
echo ============================
echo

exit 0
